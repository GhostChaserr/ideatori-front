[{"/Users/george/Documents/projects/ideatori/ideatori-front/src/App.tsx":"1","/Users/george/Documents/projects/ideatori/ideatori-front/src/config/index.ts":"2","/Users/george/Documents/projects/ideatori/ideatori-front/src/reportWebVitals.ts":"3","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/index.ts":"4","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/index.ts":"5","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/Home.tsx":"6","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Router.tsx":"7","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/SignUp.tsx":"8","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/PasswordInput.tsx":"9","/Users/george/Documents/projects/ideatori/ideatori-front/src/index.tsx":"10","/Users/george/Documents/projects/ideatori/ideatori-front/src/services/apollo.service.ts":"11","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/SignIn.tsx":"12","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/index.ts":"13","/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/user/index.ts":"14","/Users/george/Documents/projects/ideatori/ideatori-front/src/services/user.service.ts":"15","/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/global.helpers.ts":"16","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Private.tsx":"17","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/Profile.tsx":"18","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/IdeaDrawer.tsx":"19","/Users/george/Documents/projects/ideatori/ideatori-front/src/context/AuthContex.tsx":"20","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/index.ts":"21","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/index.ts":"22","/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/index.ts":"23","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/Idea/Idea.tsx":"24","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/index.ts":"25","/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/idea/index.ts":"26","/Users/george/Documents/projects/ideatori/ideatori-front/src/services/idea.service.ts":"27","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Ideas/Ideas.tsx":"28","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/index.ts":"29"},{"size":732,"mtime":1610137869527,"results":"30","hashOfConfig":"31"},{"size":279,"mtime":1610103426153,"results":"32","hashOfConfig":"31"},{"size":425,"mtime":1610101646827,"results":"33","hashOfConfig":"31"},{"size":34,"mtime":1610103633854,"results":"34","hashOfConfig":"31"},{"size":32,"mtime":1610103587649,"results":"35","hashOfConfig":"31"},{"size":237,"mtime":1610131907597,"results":"36","hashOfConfig":"31"},{"size":1325,"mtime":1610191220009,"results":"37","hashOfConfig":"31"},{"size":4783,"mtime":1610134930287,"results":"38","hashOfConfig":"31"},{"size":780,"mtime":1610108258222,"results":"39","hashOfConfig":"31"},{"size":472,"mtime":1610139373731,"results":"40","hashOfConfig":"31"},{"size":696,"mtime":1610131396958,"results":"41","hashOfConfig":"31"},{"size":3232,"mtime":1610134782623,"results":"42","hashOfConfig":"31"},{"size":34,"mtime":1610108872671,"results":"43","hashOfConfig":"31"},{"size":205,"mtime":1610131291461,"results":"44","hashOfConfig":"31"},{"size":227,"mtime":1610129720009,"results":"45","hashOfConfig":"31"},{"size":751,"mtime":1610190306446,"results":"46","hashOfConfig":"31"},{"size":559,"mtime":1610133923129,"results":"47","hashOfConfig":"31"},{"size":516,"mtime":1610139906008,"results":"48","hashOfConfig":"31"},{"size":5179,"mtime":1610190799726,"results":"49","hashOfConfig":"31"},{"size":213,"mtime":1610130799969,"results":"50","hashOfConfig":"31"},{"size":35,"mtime":1610135329143,"results":"51","hashOfConfig":"31"},{"size":34,"mtime":1610103352777,"results":"52","hashOfConfig":"31"},{"size":59,"mtime":1610133317798,"results":"53","hashOfConfig":"31"},{"size":281,"mtime":1610140066212,"results":"54","hashOfConfig":"31"},{"size":38,"mtime":1610137156940,"results":"55","hashOfConfig":"31"},{"size":223,"mtime":1610191934287,"results":"56","hashOfConfig":"31"},{"size":862,"mtime":1610192290344,"results":"57","hashOfConfig":"31"},{"size":198,"mtime":1610192309099,"results":"58","hashOfConfig":"31"},{"size":41,"mtime":1610105141134,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"15v6p5b",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/george/Documents/projects/ideatori/ideatori-front/src/App.tsx",[],["130","131"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/config/index.ts",[],["132","133"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/reportWebVitals.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/index.ts",[],["134","135"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/index.ts",[],["136","137"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/Home.tsx",["138","139"],"import AuthContext from 'context/AuthContex'\nimport React, { useContext } from 'react'\n\n\nconst Home = () => {\n  const { isAuthed, user } = useContext(AuthContext)\n  return (\n    <div>\n      Home ....\n    </div>\n  )\n}\n\nexport default Home",["140","141"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Router.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/SignUp.tsx",["142"],"import React, { useContext, useState } from 'react'\nimport {\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  Flex,\n  Box,\n  Container,\n  Button,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react'\n\nimport PasswordInput from 'components/PasswordInput'\nimport { useForm } from 'react-hook-form'\nimport { useSignUp } from 'services/user.service'\nimport { useApolloClient } from '@apollo/client'\nimport { MeQuery } from 'gql/user'\nimport AuthContext from 'context/AuthContex'\nimport { SignUpPayload } from './SignUpTypes'\nimport { IAuthContext } from 'context/interface'\nimport { globalHelpers } from 'helpers'\nimport { useHistory } from 'react-router-dom'\n\nconst SignUp = () => {\n  const history = useHistory()\n  const [errMsg, setErrMsg] = useState<string>('')\n  const { setContext } = useContext<IAuthContext>(AuthContext)\n  const signUp = useSignUp()\n  const apolloClient = useApolloClient()\n  const [loading, setLoading] = useState<boolean>(false)\n  const { register, handleSubmit, watch, errors } = useForm()\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    repeatPassword,\n    lastName\n  }: SignUpPayload) => {\n    try {\n      setLoading(true)\n\n      if (password !== repeatPassword) {\n        setLoading(false)\n        setErrMsg('Passwords do not match!')\n        setTimeout(() => setErrMsg(''), 2000)\n        return\n      }\n\n      if (password.length < 8) {\n        setLoading(false)\n        setErrMsg('Password length must be at least 8 characters long!')\n        setTimeout(() => setErrMsg(''), 2000)\n        return\n      }\n\n      let response = await signUp({\n        variables: {\n          name,\n          lastName,\n          email,\n          password\n        }\n      })\n\n      localStorage.setItem('token', response.data.signUp.accessToken)\n      response = await apolloClient.query({ query: MeQuery })\n      setContext({ isAuthed: true, user: response.data.me })\n      setLoading(false)\n      history.push('/profile')\n    } catch (error) {\n      setLoading(false)\n      const { message } = globalHelpers.formatErrors(error)\n      setErrMsg(message)\n      setTimeout(() => setErrMsg(''), 2000)\n    }\n  }\n\n  return (\n    <Container maxW='xl'>\n      {errMsg && (\n        <Alert status='error'>\n          <AlertIcon />\n          {errMsg}\n        </Alert>\n      )}\n      <Flex flexDirection='column'>\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Box mb='5' mt='5'>\n            <FormControl id='name'>\n              <FormLabel>First name</FormLabel>\n              <Input\n                isInvalid={errors.name ? true : false}\n                name='name'\n                ref={register({ required: true })}\n                size='lg'\n                placeholder='First name'\n              />\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormControl id='lastName'>\n              <FormLabel>First name</FormLabel>\n              <Input\n                isInvalid={errors.lastName ? true : false}\n                name='lastName'\n                ref={register({ required: true })}\n                size='lg'\n                placeholder='First name'\n              />\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                isInvalid={errors.email ? true : false}\n                name='email'\n                ref={register({ required: true })}\n                size='lg'\n                type='email'\n              />\n              <FormHelperText>We'll never share your email.</FormHelperText>\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormLabel> Password </FormLabel>\n            <PasswordInput\n              isInvalid={errors.email ? true : false}\n              ref={register({ required: true })}\n              name='repeatPassword'\n            />\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormLabel>Repeat password </FormLabel>\n            <PasswordInput\n              isInvalid={errors.email ? true : false}\n              ref={register({ required: true })}\n              name='password'\n            />\n          </Box>\n          <Box\n            d='flex'\n            flexDirection='row'\n            justifyContent='flex-end'\n            borderColor='red'\n            mb='5'\n            mt='8'\n          >\n            <Button\n              type='submit'\n              p='5'\n              width='200px'\n              isLoading={loading}\n              loadingText='Submitting'\n              colorScheme='teal'\n              variant='outline'\n            >\n              Signup\n            </Button>\n          </Box>\n        </form>\n      </Flex>\n    </Container>\n  )\n}\n\nexport default SignUp\n",["143","144"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/PasswordInput.tsx",["145"],"import {\n  InputGroup,\n  Input,\n  InputRightElement,\n  Button,\n  FormLabel\n} from '@chakra-ui/react'\nimport React from 'react'\n\nconst PasswordInput = React.forwardRef((props: any, ref: any) => {\n  const [show, setShow] = React.useState(false)\n  const handleClick = () => setShow(!show)\n  return (\n    <InputGroup size='lg'>\n      <Input\n        isInvalid={props.isInvalid}\n        ref={ref}\n        name={props.name}\n        pr='4.5rem'\n        type={show ? 'text' : 'password'}\n        placeholder='Enter password'\n        size='lg'\n      />\n      <InputRightElement width='4.5rem'>\n        <Button h='1.75rem' size='sm' onClick={handleClick}>\n          {show ? 'Hide' : 'Show'}\n        </Button>\n      </InputRightElement>\n    </InputGroup>\n  )\n})\n\nexport default PasswordInput\n",["146","147"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/index.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/services/apollo.service.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/SignIn.tsx",["148","149","150","151"],"import React, { useContext, useState } from 'react'\nimport {\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  Flex,\n  Box,\n  Container,\n  Button,\n  Alert,\n  AlertIcon,\n  AlertTitle\n} from '@chakra-ui/react'\nimport PasswordInput from 'components/PasswordInput'\nimport { useForm } from 'react-hook-form'\nimport { useSignIn } from 'services/user.service'\nimport AuthContext from 'context/AuthContex'\nimport { useApolloClient } from '@apollo/client'\nimport { MeQuery } from 'gql/user'\nimport { useHistory } from 'react-router-dom'\nimport { SignInPayload } from './SignInTypes'\nimport { globalHelpers } from 'helpers'\n\nconst SignIn = () => {\n  const history = useHistory()\n  const [errMsg, setErrMsg] = useState<string>('')\n  const apolloClient = useApolloClient()\n  const { setContext } = useContext(AuthContext)\n  const signIn = useSignIn()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [submitted, setSubmitted] = useState<boolean>(false)\n  const { register, handleSubmit, watch, errors } = useForm()\n\n  const onSubmit = async ({ email, password }: SignInPayload) => {\n    try {\n      setLoading(true)\n      let response = await signIn({\n        variables: {\n          email,\n          password\n        }\n      })\n\n      localStorage.setItem('token', response.data.signIn.accessToken)\n      response = await apolloClient.query({ query: MeQuery })\n      setContext({ isAuthed: true, user: response.data.me })\n      setLoading(false)\n      history.push('/profile')\n    } catch (error) {\n      setLoading(false)\n      const { message } = globalHelpers.formatErrors(error)\n      setErrMsg(message)\n      setTimeout(() => setErrMsg(''), 2000)\n    }\n  }\n\n  return (\n    <Container maxW='xl'>\n      {errMsg && (\n        <Alert status='error'>\n          <AlertIcon />\n          {errMsg}\n        </Alert>\n      )}\n      <Flex flexDirection='column'>\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Box mb='5' mt='5'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                isInvalid={errors.email ? true : false}\n                name='email'\n                ref={register({ required: true })}\n                size='lg'\n                type='email'\n              />\n              <FormHelperText>We'll never share your email.</FormHelperText>\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormLabel> Password </FormLabel>\n            <PasswordInput\n              isInvalid={errors.email ? true : false}\n              ref={register({ required: true })}\n              name='password'\n            />\n          </Box>\n          <Box\n            d='flex'\n            flexDirection='row'\n            justifyContent='flex-end'\n            borderColor='red'\n            mb='5'\n            mt='8'\n          >\n            <Button\n              type='submit'\n              p='5'\n              width='200px'\n              isLoading={loading}\n              loadingText='Submitting'\n              colorScheme='teal'\n              variant='outline'\n            >\n              Signin\n            </Button>\n          </Box>\n        </form>\n      </Flex>\n    </Container>\n  )\n}\n\nexport default SignIn\n","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/user/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/services/user.service.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/global.helpers.ts",["152"],"const isObject = (obj: any) => {\n  const type = typeof obj\n  return type === 'function' || (type === 'object' && !!obj)\n}\n\nconst formatErrors = (error: any): { message: string } => {\n  if (!isObject(error) || error.graphQLErrors.length < 0) return { message: '' }\n\n  // Check if network error exists...\n  const { networkError } = error\n\n  // Server is down\n  if (networkError) return { message: 'server is down' }\n\n\n  // Different error\n  const message = error.graphQLErrors[0].message\n\n\n  return { message }\n}\n\nconst getKeywordsFromString = (keywords: string): string[] => {\n  let keywordsArr = keywords.split(',')\n  return keywordsArr = keywordsArr.map((keyword: string) => keyword.trim())\n}\n\nexport default { formatErrors, getKeywordsFromString }\n\n","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Private.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/Profile.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/IdeaDrawer.tsx",["153","154"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/context/AuthContex.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/Idea/Idea.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/idea/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/services/idea.service.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Ideas/Ideas.tsx",["155","156"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/index.ts",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"157","replacedBy":"163"},{"ruleId":"159","replacedBy":"164"},{"ruleId":"157","replacedBy":"165"},{"ruleId":"159","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":6,"column":11,"nodeType":"169","messageId":"170","endLine":6,"endColumn":19},{"ruleId":"167","severity":1,"message":"171","line":6,"column":21,"nodeType":"169","messageId":"170","endLine":6,"endColumn":25},{"ruleId":"157","replacedBy":"172"},{"ruleId":"159","replacedBy":"173"},{"ruleId":"167","severity":1,"message":"174","line":33,"column":35,"nodeType":"169","messageId":"170","endLine":33,"endColumn":40},{"ruleId":"157","replacedBy":"175"},{"ruleId":"159","replacedBy":"176"},{"ruleId":"167","severity":1,"message":"177","line":6,"column":3,"nodeType":"169","messageId":"170","endLine":6,"endColumn":12},{"ruleId":"157","replacedBy":"178"},{"ruleId":"159","replacedBy":"179"},{"ruleId":"167","severity":1,"message":"180","line":13,"column":3,"nodeType":"169","messageId":"170","endLine":13,"endColumn":13},{"ruleId":"167","severity":1,"message":"181","line":32,"column":10,"nodeType":"169","messageId":"170","endLine":32,"endColumn":19},{"ruleId":"167","severity":1,"message":"182","line":32,"column":21,"nodeType":"169","messageId":"170","endLine":32,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":33,"column":35,"nodeType":"169","messageId":"170","endLine":33,"endColumn":40},{"ruleId":"183","severity":1,"message":"184","line":28,"column":1,"nodeType":"185","endLine":28,"endColumn":55},{"ruleId":"167","severity":1,"message":"174","line":31,"column":35,"nodeType":"169","messageId":"170","endLine":31,"endColumn":40},{"ruleId":"167","severity":1,"message":"186","line":51,"column":13,"nodeType":"169","messageId":"170","endLine":51,"endColumn":21},{"ruleId":"167","severity":1,"message":"187","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":22},{"ruleId":"167","severity":1,"message":"188","line":2,"column":24,"nodeType":"169","messageId":"170","endLine":2,"endColumn":37},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],["189"],["190"],["189"],["190"],["189"],["190"],"@typescript-eslint/no-unused-vars","'isAuthed' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.",["189"],["190"],"'watch' is assigned a value but never used.",["189"],["190"],"'FormLabel' is defined but never used.",["189"],["190"],"'AlertTitle' is defined but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'response' is assigned a value but never used.","'useIdeaQuery' is defined but never used.","'useIdeasQuery' is defined but never used.","no-global-assign","no-unsafe-negation"]