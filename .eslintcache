[{"/Users/george/Documents/projects/ideatori/ideatori-front/src/App.tsx":"1","/Users/george/Documents/projects/ideatori/ideatori-front/src/config/index.ts":"2","/Users/george/Documents/projects/ideatori/ideatori-front/src/reportWebVitals.ts":"3","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/index.ts":"4","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/index.ts":"5","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/Home.tsx":"6","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Router.tsx":"7","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/SignUp.tsx":"8","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/PasswordInput.tsx":"9","/Users/george/Documents/projects/ideatori/ideatori-front/src/index.tsx":"10","/Users/george/Documents/projects/ideatori/ideatori-front/src/services/apollo.service.ts":"11","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/SignIn.tsx":"12","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/index.ts":"13","/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/user/index.ts":"14","/Users/george/Documents/projects/ideatori/ideatori-front/src/services/user.service.ts":"15","/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/global.helpers.ts":"16","/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Private.tsx":"17","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/Profile.tsx":"18","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/IdeaDrawer.tsx":"19","/Users/george/Documents/projects/ideatori/ideatori-front/src/context/AuthContex.tsx":"20","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/index.ts":"21","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/index.ts":"22","/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/index.ts":"23","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/Idea/Idea.tsx":"24","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/index.ts":"25","/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/idea/index.ts":"26","/Users/george/Documents/projects/ideatori/ideatori-front/src/services/idea.service.ts":"27","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Ideas/Ideas.tsx":"28","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/index.ts":"29","/Users/george/Documents/projects/ideatori/ideatori-front/src/components/CommentInput/CommentInput.tsx":"30","/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/comment/index.ts":"31"},{"size":732,"mtime":1610137869527,"results":"32","hashOfConfig":"33"},{"size":279,"mtime":1610103426153,"results":"34","hashOfConfig":"33"},{"size":425,"mtime":1610101646827,"results":"35","hashOfConfig":"33"},{"size":34,"mtime":1610103633854,"results":"36","hashOfConfig":"33"},{"size":32,"mtime":1610103587649,"results":"37","hashOfConfig":"33"},{"size":237,"mtime":1610131907597,"results":"38","hashOfConfig":"33"},{"size":1325,"mtime":1610191220009,"results":"39","hashOfConfig":"33"},{"size":4783,"mtime":1610134930287,"results":"40","hashOfConfig":"33"},{"size":780,"mtime":1610108258222,"results":"41","hashOfConfig":"33"},{"size":472,"mtime":1610139373731,"results":"42","hashOfConfig":"33"},{"size":696,"mtime":1610131396958,"results":"43","hashOfConfig":"33"},{"size":3232,"mtime":1610134782623,"results":"44","hashOfConfig":"33"},{"size":34,"mtime":1610108872671,"results":"45","hashOfConfig":"33"},{"size":205,"mtime":1610131291461,"results":"46","hashOfConfig":"33"},{"size":227,"mtime":1610129720009,"results":"47","hashOfConfig":"33"},{"size":751,"mtime":1610190306446,"results":"48","hashOfConfig":"33"},{"size":559,"mtime":1610133923129,"results":"49","hashOfConfig":"33"},{"size":516,"mtime":1610139906008,"results":"50","hashOfConfig":"33"},{"size":5179,"mtime":1610190799726,"results":"51","hashOfConfig":"33"},{"size":213,"mtime":1610130799969,"results":"52","hashOfConfig":"33"},{"size":35,"mtime":1610135329143,"results":"53","hashOfConfig":"33"},{"size":34,"mtime":1610103352777,"results":"54","hashOfConfig":"33"},{"size":59,"mtime":1610133317798,"results":"55","hashOfConfig":"33"},{"size":281,"mtime":1610140066212,"results":"56","hashOfConfig":"33"},{"size":38,"mtime":1610137156940,"results":"57","hashOfConfig":"33"},{"size":223,"mtime":1610191934287,"results":"58","hashOfConfig":"33"},{"size":862,"mtime":1610192290344,"results":"59","hashOfConfig":"33"},{"size":303,"mtime":1610193701935,"results":"60","hashOfConfig":"33"},{"size":41,"mtime":1610105141134,"results":"61","hashOfConfig":"33"},{"size":1512,"mtime":1610193820475,"results":"62","hashOfConfig":"33"},{"size":118,"mtime":1610193374362,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"15v6p5b",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/george/Documents/projects/ideatori/ideatori-front/src/App.tsx",[],["139","140"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/config/index.ts",[],["141","142"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/reportWebVitals.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/index.ts",[],["143","144"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Home/Home.tsx",["145","146"],"import AuthContext from 'context/AuthContex'\nimport React, { useContext } from 'react'\n\n\nconst Home = () => {\n  const { isAuthed, user } = useContext(AuthContext)\n  return (\n    <div>\n      Home ....\n    </div>\n  )\n}\n\nexport default Home",["147","148"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Router.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/SignUp.tsx",["149"],"import React, { useContext, useState } from 'react'\nimport {\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  Flex,\n  Box,\n  Container,\n  Button,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react'\n\nimport PasswordInput from 'components/PasswordInput'\nimport { useForm } from 'react-hook-form'\nimport { useSignUp } from 'services/user.service'\nimport { useApolloClient } from '@apollo/client'\nimport { MeQuery } from 'gql/user'\nimport AuthContext from 'context/AuthContex'\nimport { SignUpPayload } from './SignUpTypes'\nimport { IAuthContext } from 'context/interface'\nimport { globalHelpers } from 'helpers'\nimport { useHistory } from 'react-router-dom'\n\nconst SignUp = () => {\n  const history = useHistory()\n  const [errMsg, setErrMsg] = useState<string>('')\n  const { setContext } = useContext<IAuthContext>(AuthContext)\n  const signUp = useSignUp()\n  const apolloClient = useApolloClient()\n  const [loading, setLoading] = useState<boolean>(false)\n  const { register, handleSubmit, watch, errors } = useForm()\n\n  const onSubmit = async ({\n    name,\n    email,\n    password,\n    repeatPassword,\n    lastName\n  }: SignUpPayload) => {\n    try {\n      setLoading(true)\n\n      if (password !== repeatPassword) {\n        setLoading(false)\n        setErrMsg('Passwords do not match!')\n        setTimeout(() => setErrMsg(''), 2000)\n        return\n      }\n\n      if (password.length < 8) {\n        setLoading(false)\n        setErrMsg('Password length must be at least 8 characters long!')\n        setTimeout(() => setErrMsg(''), 2000)\n        return\n      }\n\n      let response = await signUp({\n        variables: {\n          name,\n          lastName,\n          email,\n          password\n        }\n      })\n\n      localStorage.setItem('token', response.data.signUp.accessToken)\n      response = await apolloClient.query({ query: MeQuery })\n      setContext({ isAuthed: true, user: response.data.me })\n      setLoading(false)\n      history.push('/profile')\n    } catch (error) {\n      setLoading(false)\n      const { message } = globalHelpers.formatErrors(error)\n      setErrMsg(message)\n      setTimeout(() => setErrMsg(''), 2000)\n    }\n  }\n\n  return (\n    <Container maxW='xl'>\n      {errMsg && (\n        <Alert status='error'>\n          <AlertIcon />\n          {errMsg}\n        </Alert>\n      )}\n      <Flex flexDirection='column'>\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Box mb='5' mt='5'>\n            <FormControl id='name'>\n              <FormLabel>First name</FormLabel>\n              <Input\n                isInvalid={errors.name ? true : false}\n                name='name'\n                ref={register({ required: true })}\n                size='lg'\n                placeholder='First name'\n              />\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormControl id='lastName'>\n              <FormLabel>First name</FormLabel>\n              <Input\n                isInvalid={errors.lastName ? true : false}\n                name='lastName'\n                ref={register({ required: true })}\n                size='lg'\n                placeholder='First name'\n              />\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                isInvalid={errors.email ? true : false}\n                name='email'\n                ref={register({ required: true })}\n                size='lg'\n                type='email'\n              />\n              <FormHelperText>We'll never share your email.</FormHelperText>\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormLabel> Password </FormLabel>\n            <PasswordInput\n              isInvalid={errors.email ? true : false}\n              ref={register({ required: true })}\n              name='repeatPassword'\n            />\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormLabel>Repeat password </FormLabel>\n            <PasswordInput\n              isInvalid={errors.email ? true : false}\n              ref={register({ required: true })}\n              name='password'\n            />\n          </Box>\n          <Box\n            d='flex'\n            flexDirection='row'\n            justifyContent='flex-end'\n            borderColor='red'\n            mb='5'\n            mt='8'\n          >\n            <Button\n              type='submit'\n              p='5'\n              width='200px'\n              isLoading={loading}\n              loadingText='Submitting'\n              colorScheme='teal'\n              variant='outline'\n            >\n              Signup\n            </Button>\n          </Box>\n        </form>\n      </Flex>\n    </Container>\n  )\n}\n\nexport default SignUp\n",["150","151"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/PasswordInput.tsx",["152"],"import {\n  InputGroup,\n  Input,\n  InputRightElement,\n  Button,\n  FormLabel\n} from '@chakra-ui/react'\nimport React from 'react'\n\nconst PasswordInput = React.forwardRef((props: any, ref: any) => {\n  const [show, setShow] = React.useState(false)\n  const handleClick = () => setShow(!show)\n  return (\n    <InputGroup size='lg'>\n      <Input\n        isInvalid={props.isInvalid}\n        ref={ref}\n        name={props.name}\n        pr='4.5rem'\n        type={show ? 'text' : 'password'}\n        placeholder='Enter password'\n        size='lg'\n      />\n      <InputRightElement width='4.5rem'>\n        <Button h='1.75rem' size='sm' onClick={handleClick}>\n          {show ? 'Hide' : 'Show'}\n        </Button>\n      </InputRightElement>\n    </InputGroup>\n  )\n})\n\nexport default PasswordInput\n",["153","154"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/index.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/services/apollo.service.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/SignIn.tsx",["155","156","157","158"],"import React, { useContext, useState } from 'react'\nimport {\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  Flex,\n  Box,\n  Container,\n  Button,\n  Alert,\n  AlertIcon,\n  AlertTitle\n} from '@chakra-ui/react'\nimport PasswordInput from 'components/PasswordInput'\nimport { useForm } from 'react-hook-form'\nimport { useSignIn } from 'services/user.service'\nimport AuthContext from 'context/AuthContex'\nimport { useApolloClient } from '@apollo/client'\nimport { MeQuery } from 'gql/user'\nimport { useHistory } from 'react-router-dom'\nimport { SignInPayload } from './SignInTypes'\nimport { globalHelpers } from 'helpers'\n\nconst SignIn = () => {\n  const history = useHistory()\n  const [errMsg, setErrMsg] = useState<string>('')\n  const apolloClient = useApolloClient()\n  const { setContext } = useContext(AuthContext)\n  const signIn = useSignIn()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [submitted, setSubmitted] = useState<boolean>(false)\n  const { register, handleSubmit, watch, errors } = useForm()\n\n  const onSubmit = async ({ email, password }: SignInPayload) => {\n    try {\n      setLoading(true)\n      let response = await signIn({\n        variables: {\n          email,\n          password\n        }\n      })\n\n      localStorage.setItem('token', response.data.signIn.accessToken)\n      response = await apolloClient.query({ query: MeQuery })\n      setContext({ isAuthed: true, user: response.data.me })\n      setLoading(false)\n      history.push('/profile')\n    } catch (error) {\n      setLoading(false)\n      const { message } = globalHelpers.formatErrors(error)\n      setErrMsg(message)\n      setTimeout(() => setErrMsg(''), 2000)\n    }\n  }\n\n  return (\n    <Container maxW='xl'>\n      {errMsg && (\n        <Alert status='error'>\n          <AlertIcon />\n          {errMsg}\n        </Alert>\n      )}\n      <Flex flexDirection='column'>\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Box mb='5' mt='5'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                isInvalid={errors.email ? true : false}\n                name='email'\n                ref={register({ required: true })}\n                size='lg'\n                type='email'\n              />\n              <FormHelperText>We'll never share your email.</FormHelperText>\n            </FormControl>\n          </Box>\n          <Box mb='5' mt='5'>\n            <FormLabel> Password </FormLabel>\n            <PasswordInput\n              isInvalid={errors.email ? true : false}\n              ref={register({ required: true })}\n              name='password'\n            />\n          </Box>\n          <Box\n            d='flex'\n            flexDirection='row'\n            justifyContent='flex-end'\n            borderColor='red'\n            mb='5'\n            mt='8'\n          >\n            <Button\n              type='submit'\n              p='5'\n              width='200px'\n              isLoading={loading}\n              loadingText='Submitting'\n              colorScheme='teal'\n              variant='outline'\n            >\n              Signin\n            </Button>\n          </Box>\n        </form>\n      </Flex>\n    </Container>\n  )\n}\n\nexport default SignIn\n","/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignIn/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/user/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/services/user.service.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/global.helpers.ts",["159"],"const isObject = (obj: any) => {\n  const type = typeof obj\n  return type === 'function' || (type === 'object' && !!obj)\n}\n\nconst formatErrors = (error: any): { message: string } => {\n  if (!isObject(error) || error.graphQLErrors.length < 0) return { message: '' }\n\n  // Check if network error exists...\n  const { networkError } = error\n\n  // Server is down\n  if (networkError) return { message: 'server is down' }\n\n\n  // Different error\n  const message = error.graphQLErrors[0].message\n\n\n  return { message }\n}\n\nconst getKeywordsFromString = (keywords: string): string[] => {\n  let keywordsArr = keywords.split(',')\n  return keywordsArr = keywordsArr.map((keyword: string) => keyword.trim())\n}\n\nexport default { formatErrors, getKeywordsFromString }\n\n",["160","161"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/Router/Private.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/Profile.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/IdeaDrawer.tsx",["162","163"],"import React, { useState } from 'react'\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Textarea,\n  Box,\n  FormLabel,\n  Button,\n  useDisclosure,\n  Input,\n  Select,\n  FormHelperText,\n  Alert,\n  AlertIcon\n} from '@chakra-ui/react'\n\nimport { useForm } from 'react-hook-form'\nimport { IdeaDrawerProps, CreateIdeaPayload } from './IdeaDrawerTypes'\nimport { useCreateIdea } from 'services/idea.service'\nimport { globalHelpers } from 'helpers'\n\nfunction IdeaDrawer({ update, data }: IdeaDrawerProps) {\n  const [message, setMessage] = useState<{ msg: string, type: any }>({ msg:'', type:'' })\n  const [loading, setLoading] = useState(false)\n  const createIdea = useCreateIdea()\n  const { register, handleSubmit, watch, errors } = useForm()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const onSubmit = async ({\n    name,\n    summary,\n    category,\n    keywordsString\n  }: CreateIdeaPayload) => {\n    try {\n      setLoading(true)\n\n      if (keywordsString.length === 0) {\n        setLoading(false)\n        setMessage({ msg: 'დაამატე მინიმუმ 2 საკვანძო სიტყვა!', type:'error' })\n        setTimeout(() => setMessage({ msg: '', type: '' }), 2000)\n        return\n      }\n\n      const keywords = globalHelpers.getKeywordsFromString(keywordsString)\n      const response = await createIdea({\n        variables: {\n          input: {\n            keywords,\n            name,\n            summary,\n            category\n          }\n        }\n      })\n      setMessage({ msg: 'თქვენი იდეა გამოქვეყნდა', type:'success' })\n      setTimeout(() => setMessage({ msg: '', type: '' }), 2000)\n      setLoading(false)\n    } catch (error) {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <>\n      <Button colorScheme='teal' onClick={onOpen}>\n        Write new idea\n      </Button>\n      <Drawer size='xl' isOpen={isOpen} placement='right' onClose={onClose}>\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton />\n            <DrawerHeader> მოგვიყევი შენი იდეის შესახებ </DrawerHeader>\n            <form noValidate onSubmit={handleSubmit(onSubmit)}>\n              <DrawerBody>\n                <Box>\n                  {message.msg && (\n                    <Alert status={message.type}>\n                      <AlertIcon />\n                      {message.msg}\n                    </Alert>\n                  )}\n                  <Box mt='5' mb='5'>\n                    <FormLabel> დაარქვი იდეას სახელი </FormLabel>\n                    <Input\n                      isInvalid={errors.name ? true : false}\n                      name='name'\n                      ref={register({ required: true })}\n                      size='lg'\n                      type='text'\n                    />\n                  </Box>\n                  <Box mt='5' mb='5'>\n                    <FormLabel> დაწერე იდეის მოკლე აღწერა </FormLabel>\n                    <Textarea\n                      name='summary'\n                      ref={register({ required: true })}\n                      size='lg'\n                      rows={5}\n                      placeholder='Write your new idea here'\n                    />\n                  </Box>\n                  <Box mt='5' mb='5'>\n                    <FormLabel> აირჩიე კატეოგირა </FormLabel>\n                    <Select\n                      defaultValue='Discussion'\n                      name='category'\n                      ref={register({ required: true })}\n                      size='lg'\n                    >\n                      <option value='Startup'>სტარტაპი</option>\n                      <option value='Business'>ბიზნესი</option>\n                      <option value='Discussion'>იდეა</option>\n                    </Select>\n                  </Box>\n                  <Box mt='5' mb='5'>\n                    <FormLabel> დაამატე საკვანძო სიტყვები </FormLabel>\n                    <Textarea\n                      name='keywordsString'\n                      ref={register}\n                      size='lg'\n                      rows={3}\n                    />\n                    <FormHelperText>\n                      სიტყვებს შორის დატოვე მძიმე.\n                    </FormHelperText>\n                  </Box>\n                </Box>\n              </DrawerBody>\n              <DrawerFooter>\n                <Button\n                  size='lg'\n                  type='submit'\n                  p='5'\n                  isLoading={loading}\n                  loadingText='Wait...'\n                  colorScheme='teal'\n                  variant='outline'\n                >\n                  Publish\n                </Button>\n              </DrawerFooter>\n            </form>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </>\n  )\n}\n\nexport default IdeaDrawer\n","/Users/george/Documents/projects/ideatori/ideatori-front/src/context/AuthContex.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Profile/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/SignUp/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/helpers/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/Idea/Idea.tsx",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/IdeaDrawer/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/idea/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/services/idea.service.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/pages/Ideas/Ideas.tsx",["164","165"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/PasswordInput/index.ts",[],"/Users/george/Documents/projects/ideatori/ideatori-front/src/components/CommentInput/CommentInput.tsx",["166","167"],"/Users/george/Documents/projects/ideatori/ideatori-front/src/gql/comment/index.ts",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"168","replacedBy":"174"},{"ruleId":"170","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":6,"column":11,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"176","severity":1,"message":"180","line":6,"column":21,"nodeType":"178","messageId":"179","endLine":6,"endColumn":25},{"ruleId":"168","replacedBy":"181"},{"ruleId":"170","replacedBy":"182"},{"ruleId":"176","severity":1,"message":"183","line":33,"column":35,"nodeType":"178","messageId":"179","endLine":33,"endColumn":40},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"176","severity":1,"message":"186","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":12},{"ruleId":"168","replacedBy":"187"},{"ruleId":"170","replacedBy":"188"},{"ruleId":"176","severity":1,"message":"189","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":13},{"ruleId":"176","severity":1,"message":"190","line":32,"column":10,"nodeType":"178","messageId":"179","endLine":32,"endColumn":19},{"ruleId":"176","severity":1,"message":"191","line":32,"column":21,"nodeType":"178","messageId":"179","endLine":32,"endColumn":33},{"ruleId":"176","severity":1,"message":"183","line":33,"column":35,"nodeType":"178","messageId":"179","endLine":33,"endColumn":40},{"ruleId":"192","severity":1,"message":"193","line":28,"column":1,"nodeType":"194","endLine":28,"endColumn":55},{"ruleId":"168","replacedBy":"195"},{"ruleId":"170","replacedBy":"196"},{"ruleId":"176","severity":1,"message":"183","line":31,"column":35,"nodeType":"178","messageId":"179","endLine":31,"endColumn":40},{"ruleId":"176","severity":1,"message":"197","line":51,"column":13,"nodeType":"178","messageId":"179","endLine":51,"endColumn":21},{"ruleId":"176","severity":1,"message":"198","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":22},{"ruleId":"176","severity":1,"message":"199","line":3,"column":24,"nodeType":"178","messageId":"179","endLine":3,"endColumn":37},{"ruleId":"176","severity":1,"message":"183","line":10,"column":35,"nodeType":"178","messageId":"179","endLine":10,"endColumn":40},{"ruleId":"176","severity":1,"message":"200","line":10,"column":42,"nodeType":"178","messageId":"179","endLine":10,"endColumn":48},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],["201"],["202"],["201"],["202"],"@typescript-eslint/no-unused-vars","'isAuthed' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.",["201"],["202"],"'watch' is assigned a value but never used.",["201"],["202"],"'FormLabel' is defined but never used.",["201"],["202"],"'AlertTitle' is defined but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["201"],["202"],"'response' is assigned a value but never used.","'useIdeaQuery' is defined but never used.","'useIdeasQuery' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]